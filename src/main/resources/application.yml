# 로그 설정
logging:
  file:
      name: /logs/spring-board.log # 로그를 저장할 파일 경로
  level:
      jdbc:
          resultsettable: debug # SQL 결과 테이블 로그 출력
          sqlonly: debug # SQL 실행만 로깅
          sqltiming: debug # SQL 실행 시간 로깅
      org:
          hibernate:
              orm:
                  jdbc:
                      bind: trace # SQL 값 바인딩 값 로깅
              sql: debug # Hibernate SQL 실행 로그
          root: info # 기본 로그 레벨

# 서버 포트 설정
server:
    port: 8080 # 서버 실행 포트
    address: 0.0.0.0
    servlet:
        context-path: / # 기본 url 경로 설정

# 스프링 설정
spring:
    application:
        name: spring-board
    
    # DataBase 연동 설정
    datasource:
        driver-class-name: com.mysql.cj.jdbc.Driver # MySQL 드라이버
        url: jdbc:mysql://127.0.0.1:3306/spring_board # MySQL 데이터베이스 URL
        username: root # DB 로그인 ID
        password: "Rlaalsgml312!" # DB 비밀번호

    devtools:
      livereload: # 코드 변경 시 자동으로 애플리케이션을 재시작하는 기능
          enabled: true # 코드 수정 시 자동 새로고침

    # Spring Data JPA 설정
    # JPA (Java Persistence API)
    jpa:
        database: mysql
        hibernate:
            ddl-auto: update # DB 테이블 자동 업데이트
        show_sql: true # SQL 실행문 출력
        properties:
          hibernate:
              dialect: org.hibernate.dialect.MySQL8Dialect # dialect - 데이터베이스 별 특화된 SQL 문법을 처리하는 방언
              format_sql: true # SQL 보기 쉽게 정리

    # 애플리케이션을 시작하고 디자인 수정 후 새로고침을 하더라도
    # 수정 전의 페이지만 나오는 것을 확인 할 수 있는데 
    # 이를 보완하기 위해 해당 캐싱의 속성을 설정 (배포 시 true 설정)
    thymeleaf:
        cache: false
        prefix: classpath:/templates # HTML 파일 위치 (classpath 가 resource 위치까지 가리킴)
        # 컨트롤러에서 반환한 뷰 이름으로 classpath:/templates/[뷰이름].html 파일 찾아 렌더링


    # 파일 업로드 관련 설정
    servlet:
      multipart:
        max-file-size: 10MB
        max-request-size: 10MB


    # 타임존 설정
    jackson:
      time-zone: Asia/Seoul
      date-format: yyyy-MM-dd HH:mm:ss

    # MVC 설정 (jsp 사용 시)
#    mvc:
#      view:
#        prefix: /WEB-INF/views/
#        suffix: .jsp